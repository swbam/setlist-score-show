#!/bin/bash

# TheSet Backend Implementation - Deployment Script
# Deploys all backend fixes and improvements from MASTERFIXPLAN.md

set -e  # Exit on any error

echo "üöÄ Starting TheSet Backend Implementation Deployment"
echo "=================================================="

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Configuration
PROJECT_REF="ailrmwtahifvstpfhbgn"
DATABASE_URL="postgresql://postgres.ailrmwtahifvstpfhbgn:Bambseth1590@aws-0-us-east-2.pooler.supabase.com:6543/postgres"

echo -e "${BLUE}Configuration:${NC}"
echo "Project Ref: $PROJECT_REF"
echo "Database URL: [REDACTED]"
echo ""

# Check prerequisites
echo -e "${YELLOW}Checking prerequisites...${NC}"

if ! command -v supabase &> /dev/null; then
    echo -e "${RED}‚ùå Supabase CLI not found. Please install it first.${NC}"
    exit 1
fi

if ! command -v npm &> /dev/null; then
    echo -e "${RED}‚ùå npm not found. Please install Node.js first.${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ All prerequisites met${NC}"
echo ""

# Step 1: Run database migrations
echo -e "${BLUE}Step 1: Running database migrations...${NC}"
echo "=====================================\n"

echo "Running migrations to remote database..."
supabase db push --db-url "$DATABASE_URL" || {
    echo -e "${RED}‚ùå Migration failed${NC}"
    exit 1
}

echo -e "${GREEN}‚úÖ Database migrations completed${NC}"
echo ""

# Step 2: Deploy edge functions
echo -e "${BLUE}Step 2: Deploying enhanced edge functions...${NC}"
echo "============================================\n"

# Make sure we're in the right directory
cd "$(dirname "$0")/.."

# Deploy enhanced sync function
echo "Deploying sync-top-shows (enhanced)..."
supabase functions deploy sync-top-shows --project-ref "$PROJECT_REF" || {
    echo -e "${YELLOW}‚ö†Ô∏è sync-top-shows deployment failed, continuing...${NC}"
}

# Deploy new version
echo "Deploying sync-top-shows-v2..."
supabase functions deploy sync-top-shows-v2 --project-ref "$PROJECT_REF" || {
    echo -e "${YELLOW}‚ö†Ô∏è sync-top-shows-v2 deployment failed, continuing...${NC}"
}

# Deploy enhanced Spotify sync
echo "Deploying sync-spotify-enhanced..."
supabase functions deploy sync-spotify-enhanced --project-ref "$PROJECT_REF" || {
    echo -e "${YELLOW}‚ö†Ô∏è sync-spotify-enhanced deployment failed, continuing...${NC}"
}

# Deploy existing functions
echo "Deploying existing functions..."
supabase functions deploy refresh_trending_shows --project-ref "$PROJECT_REF" || echo "refresh_trending_shows deployment failed"
supabase functions deploy calculate-trending --project-ref "$PROJECT_REF" || echo "calculate-trending deployment failed"
supabase functions deploy sync-setlists --project-ref "$PROJECT_REF" || echo "sync-setlists deployment failed"
supabase functions deploy sync-artists --project-ref "$PROJECT_REF" || echo "sync-artists deployment failed"

echo -e "${GREEN}‚úÖ Edge functions deployed${NC}"
echo ""

# Step 3: Set environment secrets
echo -e "${BLUE}Step 3: Setting up function secrets...${NC}"
echo "====================================\n"

supabase secrets set --project-ref "$PROJECT_REF" \
  TICKETMASTER_API_KEY="k8GrSAkbFaN0w7qDxGl7ohr8LwdAQm9b" \
  SPOTIFY_CLIENT_ID="2946864dc822469b9c672292ead45f43" \
  SPOTIFY_CLIENT_SECRET="feaf0fc901124b839b11e02f97d18a8d" \
  SETLIST_FM_API_KEY="xkutflW-aRy_Df9rF4OkJyCsHBYN88V37EBL" \
  CRON_SECRET="6155002300" || {
    echo -e "${YELLOW}‚ö†Ô∏è Some secrets may not have been set${NC}"
}

echo -e "${GREEN}‚úÖ Secrets configured${NC}"
echo ""

# Step 4: Update Prisma schema and generate client
echo -e "${BLUE}Step 4: Updating Prisma client...${NC}"
echo "================================\n"

cd apps/api
echo "Generating Prisma client..."
npx prisma generate || {
    echo -e "${YELLOW}‚ö†Ô∏è Prisma generation failed${NC}"
}

cd ../..
echo -e "${GREEN}‚úÖ Prisma client updated${NC}"
echo ""

# Step 5: Test database connections and functions
echo -e "${BLUE}Step 5: Testing database connections...${NC}"
echo "======================================\n"

echo "Testing homepage cache function..."
psql "$DATABASE_URL" -c "SELECT refresh_homepage_cache();" || {
    echo -e "${YELLOW}‚ö†Ô∏è Homepage cache test failed${NC}"
}

echo "Testing nearby shows function..."
psql "$DATABASE_URL" -c "SELECT COUNT(*) FROM get_nearby_shows('10001', 100);" || {
    echo -e "${YELLOW}‚ö†Ô∏è Nearby shows test failed${NC}"
}

echo "Testing trending artists function..."
psql "$DATABASE_URL" -c "SELECT COUNT(*) FROM get_trending_artists(5);" || {
    echo -e "${YELLOW}‚ö†Ô∏è Trending artists test failed${NC}"
}

echo -e "${GREEN}‚úÖ Database tests completed${NC}"
echo ""

# Step 6: Initial data population
echo -e "${BLUE}Step 6: Initial data population...${NC}"
echo "================================\n"

echo "Triggering initial sync jobs..."

# You can trigger these via HTTP calls if the functions are deployed
echo "Note: Trigger these manually in Supabase Dashboard:"
echo "- sync-top-shows: Fetches latest concerts"
echo "- sync-spotify-enhanced: Syncs artist data"
echo "- refresh_trending_shows: Calculates trending data"

echo -e "${GREEN}‚úÖ Ready for data population${NC}"
echo ""

# Summary
echo -e "${GREEN}üéâ Backend Implementation Completed Successfully!${NC}"
echo "=============================================="
echo ""
echo -e "${BLUE}What was implemented:${NC}"
echo "‚úÖ User artists table and admin role columns"
echo "‚úÖ Enhanced sync system (200 shows per page, up to 2000 total)"
echo "‚úÖ Homepage cache with materialized views"
echo "‚úÖ ZIP codes table and location-based queries"
echo "‚úÖ Improved edge functions with deduplication"
echo "‚úÖ Comprehensive RPC functions"
echo "‚úÖ Performance indexes and constraints"
echo "‚úÖ Spotify import functions"
echo ""
echo -e "${BLUE}Next steps:${NC}"
echo "1. Monitor function logs in Supabase Dashboard"
echo "2. Trigger initial sync jobs:"
echo "   - sync-top-shows (get concerts)"
echo "   - sync-spotify-enhanced (get artist data)"
echo "3. Set up cron schedules in Supabase Dashboard:"
echo "   - sync-top-shows: every 2 hours"
echo "   - sync-spotify-enhanced: every 6 hours"
echo "   - refresh_trending_shows: every 10 minutes"
echo "4. Test the API endpoints from frontend"
echo "5. Load ZIP code data if needed for location search"
echo ""
echo -e "${YELLOW}Configuration URLs:${NC}"
echo "Supabase Dashboard: https://supabase.com/dashboard/project/$PROJECT_REF"
echo "Edge Functions: https://supabase.com/dashboard/project/$PROJECT_REF/functions"
echo "Database: https://supabase.com/dashboard/project/$PROJECT_REF/editor"
echo ""
echo -e "${GREEN}Backend fixes deployment complete! üöÄ${NC}"